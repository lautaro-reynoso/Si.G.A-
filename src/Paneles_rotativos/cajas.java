/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Paneles_rotativos;

import Clases_tiketera.ConectorPluginV3;
import Main.Controlador;
import Main.Main;
import Main.Modelo;
import Paneles_principales.Login;
import static Paneles_rotativos.Ingre.calendario;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ig:lauti_reynosoo
 */
public class cajas extends javax.swing.JPanel {

    Modelo modelo = new Modelo();
    public DateTimeFormatter f = DateTimeFormatter.ofPattern("HH':'mm");

    public cajas() throws SQLException, SQLException, SQLException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel39 = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        importe_inicial_caja = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cerrar_caja = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabla_cajas = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tabla_retiros2 = new javax.swing.JTable();
        jPanel35 = new javax.swing.JPanel();
        importe_retiro = new javax.swing.JTextField();
        generar_retiro = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cantidad_dia = new javax.swing.JLabel();
        cantidad_acampantes = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        inv_acamp = new javax.swing.JLabel();
        gg = new javax.swing.JLabel();
        cantidad_otros_acampantes = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cantidad_otros_dia = new javax.swing.JLabel();
        actualizar_totales = new javax.swing.JButton();
        casillas = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tabla_cajas_cerrada = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();

        jPanel40.setBorder(javax.swing.BorderFactory.createTitledBorder("Nueva Caja"));

        importe_inicial_caja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                importe_inicial_cajaKeyPressed(evt);
            }
        });

        jLabel11.setText("Caja Inicial");

        jLabel32.setText("$");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ABRIR CAJA");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(importe_inicial_caja, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importe_inicial_caja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel32)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        cerrar_caja.setText("Cerrar Caja");
        cerrar_caja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cerrar_cajaMousePressed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle de caja Abierta"));

        tabla_cajas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Fecha-Hora Apertura", "Retiros", "Monto en Caja", "Total Recaudado", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tabla_cajas);

        jLabel3.setText("ACTUALIZAR");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Retiros"));

        tabla_retiros2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha-Hora", "Importe", "Usuario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tabla_retiros2);

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder("Nuevo Retiro"));

        importe_retiro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                importe_retiroKeyPressed(evt);
            }
        });

        generar_retiro.setText("Generar Retiro");
        generar_retiro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                generar_retiroMousePressed(evt);
            }
        });

        jLabel2.setText("Importe");

        jLabel30.setText("$");

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(importe_retiro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(generar_retiro, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generar_retiro, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importe_retiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel30))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cerrar_caja, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cerrar_caja, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane6.addTab("CAJA", jPanel39);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Informacion Diaria de este Usuario"));

        jLabel5.setText("Cantidad De ingresos Diarios de Hoy:");

        jLabel6.setText("Cantidad de Ingresos de Acampantes de hoy:");

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Acampantes"));

        jLabel4.setText("Cantidad de Alumnos:");

        jLabel8.setText("Cantidad de Aportantes:");

        jLabel9.setText("Cantidad Particulares:");

        inv_acamp.setText("Cantidad Invitados:");

        gg.setText("Cantidad Otros:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inv_acamp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addComponent(cantidad_otros_acampantes)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(gg)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(cantidad_otros_acampantes))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inv_acamp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(gg)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Por el dia"));

        jLabel12.setText("Cantidad de Alumnos:");

        jLabel13.setText("Cantidad de Aportantes:");

        jLabel14.setText("Cantidad  de Particulares:");

        jLabel16.setText("Cantidad de Invitados:");

        cantidad_otros_dia.setText("Cantidad Otros:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16))
                .addGap(0, 125, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(cantidad_otros_dia)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cantidad_otros_dia, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        actualizar_totales.setText("Actualizar Datos");
        actualizar_totales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                actualizar_totalesMousePressed(evt);
            }
        });
        actualizar_totales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizar_totalesActionPerformed(evt);
            }
        });

        casillas.setText("Casillas/Motorhome:");

        jLabel15.setText("Familiares aportantes:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cantidad_dia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cantidad_acampantes, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)))
                    .addComponent(casillas)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(actualizar_totales, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cantidad_dia, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cantidad_acampantes, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(casillas))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(actualizar_totales, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Caja Cerradas de Este usuario"));

        tabla_cajas_cerrada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Fecha-Hora Apertura", "Fecha-Hora Cierre", "Retiros", "Monto en Caja", "Total Recaudado", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_cajas_cerrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabla_cajas_cerradaKeyPressed(evt);
            }
        });
        jScrollPane8.setViewportView(tabla_cajas_cerrada);

        jLabel7.setText("Imprimir Cierre");
        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel7MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane6.addTab("CAJAS CERRADAS", jPanel29);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane6)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane6)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void actualizar_totalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizar_totalesActionPerformed

    }//GEN-LAST:event_actualizar_totalesActionPerformed
    public void abrircaja() throws SQLException {

        if (!importe_inicial_caja.getText().isEmpty() && Integer.parseInt(importe_inicial_caja.getText()) >= 0) {
            ResultSet res = modelo.cajausuario(Login.usuario);
            if (!res.next()) {
                int respuesta = modelo.AbrirCaja(importe_inicial_caja.getText());

                if (respuesta == 1) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Caja abierta con exito", "EXITO",
                            javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Ocurrio un problema al abrir la caja", "ERROR",
                            javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Ya existe una caja abierta con este usuario", "ERROR",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe ingresar un monto inicial valido", "ERROR", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }

    }
    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered

    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        try {
            abrircaja();
        } catch (SQLException ex) {
            Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            tablacajaabierta();
        } catch (SQLException ex) {
            Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabel1MousePressed
    public void cerrarcaja() throws SQLException {
        ResultSet res = modelo.cajausuario(Login.usuario);
        String fecha_ab = "", hora_apertura = "";
        String hora = String.valueOf(calendario.get(Calendar.HOUR_OF_DAY));
        String minutos = String.valueOf(calendario.get(Calendar.MINUTE));
        LocalTime HoraActual = LocalTime.now();
        String hora_actual = hora + ":" + minutos;
        int cont = 0;
        if (res.next()) {
            String fecha_apertura = res.getString("fecha_abertura");
            for (int i = 0; i < fecha_apertura.length(); i++) {
                char a = fecha_apertura.charAt(i);

                if (!String.valueOf(a).equals(" ")) {
                    fecha_ab += a;
                } else {
                    i = fecha_apertura.length();
                }
            }
            for (int i = 0; i < fecha_apertura.length(); i++) {
                char a = fecha_apertura.charAt(i);
                if (cont > 0) {
                    hora_apertura += a;
                }

                if (String.valueOf(a).equals(" ") && cont == 0) {
                    cont++;
                }

            }

            String id = res.getString("id");
            String retiros = res.getString("retiros");
            String total = res.getString("plata_en_caja");
            float plata_alcierre = (Float.valueOf(total) - Float.valueOf(retiros));

            int respuesta = modelo.CerrarCaja(Login.usuario);
            if (respuesta == 1) {
                modelo.borrarretiros();
                Component jFrame = null;
                int result = JOptionPane.showConfirmDialog(jFrame, "Desea imprimir cierre?");
                if (result == 0) {
                    imprimir_tiket_caja(fecha_ab, Main.DiaActual + " " + HoraActual.format(f), Login.usuario, id, fecha_apertura, retiros, String.valueOf(plata_alcierre), total, hora_apertura, HoraActual.format(f));
                }

            }
            if (respuesta == 2) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ocurrio un problema al cerrar la caja, compruebe todo y vuelva a intentarlo", "ERROR", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "No hay una caja abierta con este usuario", "ERROR", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }

    }

    public void imprimir_tiket_caja(String fecha_apertura, String fecha_cierre, String usuario, String id_caja, String fecha_hora, String retiros, String plata_al_cierre, String total, String hora_apertura, String hora_cierre) throws SQLException {

        String hora = String.valueOf(calendario.get(Calendar.HOUR_OF_DAY));
        String minutos = String.valueOf(calendario.get(Calendar.MINUTE));
        LocalTime HoraActual = LocalTime.now();
        String hora_actual = hora + ":" + minutos;
        int cont_alumnos_acampantes = 0, cont_aportantes_acampantes = 0, cont_particular_acampantes = 0, cont_invitados_acampantes = 0;
        int cont_alumnos_dia = 0, cont_aportantes_dia = 0, cont_particular_dia = 0, cont_invitados_dia = 0, cont_otros_acampantes = 0, cont_otros_dia = 0;
        int familiares_acampantes = 0;
        int familiares_dia = 0;
        int casillas_acampar = 0;
        int casillas_pordia = 0;
        int cont = 0;
        //ResultSet res = modelo.mostrar_registros_fecha(fecha_apertura, usuario);
        ResultSet res = modelo.mostrar_registros_fecha_hora(fecha_apertura, usuario, hora_apertura, hora_cierre);
        while (res.next()) {
            cont = 0;
            if (res.getString("comentario").equals("ha ingresado un/a nuev@ casilla/motorhome acampante.")) {
                casillas_acampar++;
            }
            if (res.getString("comentario").equals("ha ingresado un/a nuev@ casilla/motorhome por el dia")) {
                casillas_pordia++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo alumno acampante")) {
                cont_alumnos_acampantes++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo aportante acampante")) {
                cont_aportantes_acampantes++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo invitado acampante")) {
                cont_invitados_acampantes++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo particular por el dia")) {
                cont_particular_dia++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo alumno por el dia")) {
                cont_alumnos_dia++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo aportante por el dia")) {
                cont_aportantes_dia++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo invitado por el dia")) {
                cont_invitados_dia++;
            }

            if (res.getString("codigo").equals("1")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 15).replaceAll(" ", ""));

                cont_particular_acampantes += contador;

            }

            if (res.getString("codigo").equals("5")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 15).replaceAll(" ", ""));

                cont_particular_dia += contador;

            }

            if (res.getString("codigo").equals("6")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(9, 11).replaceAll(" ", ""));

                cont_otros_dia += contador;

            }

            if (res.getString("codigo").equals("2")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(9, 11).replaceAll(" ", ""));
                cont_otros_acampantes += contador;
            }

            if (res.getString("codigo").equals("3")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 14).replaceAll(" ", ""));
                familiares_dia += contador;

            }

            if (res.getString("codigo").equals("4")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 14).replaceAll(" ", ""));
                familiares_acampantes += contador;

            }

            if (res.getString("codigo").equals("7")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 15).replaceAll(" ", ""));
                cont_invitados_dia += contador;

            }

            if (res.getString("codigo").equals("8")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 15).replaceAll(" ", ""));

                cont_invitados_acampantes += contador;

            }

        }

        final String serial = "0006-00000001";

        ConectorPluginV3 tiket = new ConectorPluginV3(ConectorPluginV3.URL_PLUGIN_POR_DEFECTO, serial);

        tiket.Iniciar()
                .Corte(1)
                .DeshabilitarElModoDeCaracteresChinos()
                .EstablecerAlineacion(ConectorPluginV3.ALINEACION_CENTRO)
                //.CargarImagenLocalEImprimir("C:\\Users\\mateo\\Desktop\\Nueva carpeta\\SIGA-main\\src\\com\\images\\icon-2_1.png", 0, 216)
                .Feed(1)
                .EscribirTexto("SAEBU\n")
                .EscribirTexto("Camping Universitario\n"
                        + "Cierre de Caja\n")
                .TextoSegunPaginaDeCodigos(2, "cp850", "Numero de caja: " + id_caja + "\nCajero: " + usuario + "\n")
                .EscribirTexto("Fecha y hora de Apertura: " + fecha_hora + "hs \n"
                        + "Fecha y hora de Cierre: " + fecha_cierre + "hs \n")
                .Feed(1)
                .EstablecerAlineacion(ConectorPluginV3.ALINEACION_IZQUIERDA)
                .EscribirTexto("______________________________________________\n"
                        + "Detalles de Ingresantes del dia: " + fecha_apertura + "\n(del usuario: " + usuario + ")\n\n"
                        + "Acampantes:                     Por el Dia:\n")
                .TextoSegunPaginaDeCodigos(2, "cp850", "Alumnos: " + cont_alumnos_acampantes + "                      Alumnos:" + cont_alumnos_dia + "\n"
                        + "Aportantes:" + cont_aportantes_acampantes + "                    Aportantes:" + cont_aportantes_dia + "\n"
                        + "Particulares:" + cont_particular_acampantes + "                  Particulares:" + cont_particular_dia + "\n"
                        + "Invitados:" + cont_invitados_acampantes + "                     Invitados:" + cont_invitados_dia + "\n"
                        + "Otros:" + cont_otros_acampantes + "                         Otros:" + (cont_otros_dia) + "\n"
                        + "Familiares:" + (familiares_dia + familiares_acampantes) + "                    Casillas:" + (casillas_acampar + casillas_pordia) + "\n")
                .EscribirTexto("______________________________________________\n")
                .EstablecerAlineacion(ConectorPluginV3.ALINEACION_IZQUIERDA)
                .EscribirTexto("Retiros: $" + retiros + " \n"
                        + "Dinero en Caja: $" + plata_al_cierre + "\n"
                        + "Total recaudado: $" + total + "\n")
                .EscribirTexto("_____________________________________________\n")
                .EstablecerAlineacion(ConectorPluginV3.ALINEACION_IZQUIERDA)
                //.EscribirTexto("TOTAL:  $" + importe + "\n")
                .EstablecerEnfatizado(true)
                .EstablecerTamanoFuente(1, 1)
                .EscribirTexto("Si.G.A.")
                .Feed(3)
                .Corte(1)
                .Pulso(48, 30, 120);

        try {

            tiket.imprimirEn("impresora termica");

            System.out.println("Impreso correctamente");
        } catch (Exception e) {
            System.out.println("Error imprimiendo: " + e.getMessage());
        }
    }

    public void tablacajaabierta() throws SQLException {
        ResultSet res;
        if (Main.privilegio.equals("Administrador")) {

            res = modelo.todascajausuario();
        } else {
            res = modelo.cajausuario(Login.usuario);
        }
        
        

        DefaultTableModel modelo = new DefaultTableModel();

        ArrayList<Object> nombrecolumna = new ArrayList<Object>();
        nombrecolumna.add("Usuario");
        nombrecolumna.add("Fecha-Hora Apertura");
        nombrecolumna.add("Retiros");
        nombrecolumna.add("Monto en Caja");
        nombrecolumna.add("Total Recaudado");
        nombrecolumna.add("Estado");

        for (Object columna : nombrecolumna) {
            modelo.addColumn(columna);
        }

        this.tabla_cajas.setModel(modelo);

        while (res.next()) {

            String usuario = res.getString("usuario");
            String fecha_apertura = res.getString("fecha_abertura");
            String monto_caja = res.getString("plata_en_caja");
            String retiros = String.valueOf(res.getString("retiros"));
            float retiro = Float.valueOf(res.getString("retiros"));
            float plata_en_caja = Float.valueOf(res.getString("plata_en_caja"));

            float total_recaudado = plata_en_caja;
            float montocaja = (plata_en_caja - retiro);

            String tab[] = {usuario, fecha_apertura, retiros, String.valueOf(montocaja), String.valueOf(total_recaudado), "abierta"};

            modelo.addRow(tab);
        }

        tabla_cajas.setModel(modelo);

    }

    public void actualizarretiros() throws SQLException {
        ResultSet res = modelo.mostrarretiros(Login.usuario);
        tablaretiros(res);
    }

    public void tablaretiros(ResultSet res) throws SQLException {
        DefaultTableModel modelo = new DefaultTableModel();

        ArrayList<Object> nombrecolumna = new ArrayList<Object>();
        nombrecolumna.add("Fecha-Hora");
        nombrecolumna.add("Importe");
        nombrecolumna.add("Usuario");

        for (Object columna : nombrecolumna) {
            modelo.addColumn(columna);
        }

        this.tabla_retiros2.setModel(modelo);

        while (res.next()) {

            String fecha = res.getString("fecha_hora");
            String importe = res.getString("importe");
            String usuario = res.getString("usuario");

            String tab[] = {fecha, importe, usuario};

            modelo.addRow(tab);

        }

        tabla_retiros2.setModel(modelo);
    }

    private void cerrar_cajaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrar_cajaMousePressed
        try {
            cerrarcaja();
            actualizarretiros();
        } catch (SQLException ex) {
            Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            tablacajaabierta();
        } catch (SQLException ex) {
            Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_cerrar_cajaMousePressed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        try {
            tablacajaabierta();
        } catch (SQLException ex) {
            Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel3MousePressed
    public void generarretiro() throws SQLException {
        if (!importe_retiro.getText().isEmpty()) {
            if (Integer.parseInt(importe_retiro.getText()) > 0) {
                int respuesta = modelo.generearretiro(importe_retiro.getText());

                if (respuesta == 1) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Se registro un retiro exitoso", "Exitoso", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    actualizarretiros();
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "No existe una caja abierta a este usuario", "ERROR", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "No ingreso un importe valido", "ERROR", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            }

        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "No ingreso un importe valido", "ERROR", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        }

    }

    public void ingresosactuales() {

    }

    public void cantacmapantesydiario() throws SQLException {
        int contador_acampantes = 0, contador_diario = 0;
        ResultSet res = modelo.MostarOcupacionActual();
        while (res.next()) {

        }
        ResultSet res2 = modelo.MostarOcupacionActualDia();

        while (res2.next()) {
            contador_diario++;
        }

        //   cantidad_acampantes.setText(String.valueOf(contador_acampantes));
        //     cantidad_dia.setText(String.valueOf(contador_diario));
    }

    public void ingresoporcategoria_fecha(String fecha, String usuario) throws SQLException {
        int cont_alumnos_acampantes = 0, cont_aportantes_acampantes = 0, cont_particular_acampantes = 0, cont_invitados_acampantes = 0;
        int cont_alumnos_dia = 0, cont_aportantes_dia = 0, cont_particular_dia = 0, cont_invitados_dia = 0, cont_otros_dia = 0, cont_otros_acampantes = 0;
        int familiares_dia = 0;
        int familiares_acampantes = 0;
        int cont = 0;
        int cont1 = 0;
        int cont2 = 0;
        int casillas_acampar = 0;
        int casillas_pordia = 0;
        ResultSet res = modelo.mostrar_registros_fecha(fecha, usuario);

        while (res.next()) {
            cont = 0;
            if (res.getString("comentario").equals("ha ingresado un/a nuev@ casilla/motorhome acampante.")) {
                casillas_acampar++;
            }
            if (res.getString("comentario").equals("ha ingresado un/a nuev@ casilla/motorhome por el dia")) {
                casillas_pordia++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo alumno acampante")) {
                cont_alumnos_acampantes++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo aportante acampante")) {
                cont_aportantes_acampantes++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo invitado acampante")) {
                cont_invitados_acampantes++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo particular por el dia")) {
                cont_particular_dia++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo alumno por el dia")) {
                cont_alumnos_dia++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo aportante por el dia")) {
                cont_aportantes_dia++;
            }
            if (res.getString("comentario").equals("ha ingresado un nuevo invitado por el dia")) {
                cont_invitados_dia++;
            }

            if (res.getString("codigo").equals("1")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 15).replaceAll(" ", ""));

                cont_particular_acampantes += contador;

            }

            if (res.getString("codigo").equals("5")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 15).replaceAll(" ", ""));

                cont_particular_dia += contador;

            }

            if (res.getString("codigo").equals("6")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(9, 11).replaceAll(" ", ""));

                cont_otros_dia += contador;

            }

            if (res.getString("codigo").equals("2")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(9, 11).replaceAll(" ", ""));
                cont_otros_acampantes += contador;
            }

            if (res.getString("codigo").equals("3")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 14).replaceAll(" ", ""));
                familiares_dia += contador;

            }

            if (res.getString("codigo").equals("4")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 14).replaceAll(" ", ""));
                familiares_acampantes += contador;

            }

            if (res.getString("codigo").equals("7")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 15).replaceAll(" ", ""));
                cont_invitados_dia += contador;

            }

            if (res.getString("codigo").equals("8")) {

                int contador = Integer.parseInt(res.getString("comentario").substring(13, 15).replaceAll(" ", ""));

                cont_invitados_acampantes += contador;

            }

        }

        /*
        alumnos_a.setText(String.valueOf(cont_alumnos_acampantes));
         */
        jLabel4.setText("Cantidad de Alumnos: " + String.valueOf(cont_alumnos_acampantes));

        /*
        aportantes_a.setText(String.valueOf(cont_aportantes_acampantes));
         */
        jLabel8.setText("Cantidad de Aportantes: " + String.valueOf(cont_aportantes_acampantes));
        /*
        particulares_a.setText(String.valueOf(cont_particular_acampantes));
         */
        jLabel9.setText("Cantidad de Particulares: " + String.valueOf(cont_particular_acampantes));

        /*
         invitados_a.setText(String.valueOf(cont_invitados_acampantes));
         */
        inv_acamp.setText("Cantidad de Invitados: " + String.valueOf(cont_invitados_acampantes));

        gg.setText("Cantidad Otros: " + String.valueOf(cont_otros_acampantes));

        cont2 = cont_alumnos_acampantes + cont_aportantes_acampantes + cont_particular_acampantes + cont_invitados_acampantes + cont_otros_acampantes;

        jLabel12.setText("Cantidad de Alumnos: " + String.valueOf(cont_alumnos_dia));

        jLabel13.setText("Cantidad de Aportantes: " + String.valueOf(cont_aportantes_dia));

        jLabel14.setText("Cantidad de Particulares: " + String.valueOf(cont_particular_dia));

        jLabel16.setText("Cantidad de Invitados: " + String.valueOf(cont_invitados_dia));

        cantidad_otros_dia.setText("Cantidad Otros: " + String.valueOf(cont_otros_dia));

        casillas.setText("Casillas/Motorhome: " + (casillas_pordia + casillas_acampar));

        jLabel15.setText("Familiares aportantes: " + String.valueOf(familiares_dia + familiares_acampantes));

        /*
        alumnos_d.setText(String.valueOf(cont_alumnos_dia));
       
        aportantes_d.setText(String.valueOf(cont_aportantes_dia));
        particulares_d.setText(String.valueOf(cont_particular_dia));
        invitados_d.setText(String.valueOf(cont_invitados_dia));
         */
        cont1 = cont_alumnos_dia + cont_aportantes_dia + cont_particular_dia + cont_invitados_dia + cont_otros_dia + (familiares_dia + familiares_acampantes);

        cantidad_acampantes.setText(String.valueOf(cont2));
        cantidad_dia.setText(String.valueOf(cont1));

    }

    public void tabla_caja_cerrada() throws SQLException {
        ResultSet res;
        if (Main.privilegio.equals("Administrador")) {

            res = modelo.todaslascajausuariocerrada();
        } else {
            res = modelo.cajausuariocerrada(Login.usuario);
        }

        DefaultTableModel modelo = new DefaultTableModel();

        ArrayList<Object> nombrecolumna = new ArrayList<Object>();
        nombrecolumna.add("Usuario");
        nombrecolumna.add("Fecha-Hora Apertura");
        nombrecolumna.add("Fecha-Hora Cierre");
        nombrecolumna.add("Retiros");
        nombrecolumna.add("Monto en Caja");
        nombrecolumna.add("Total Recaudado");
        nombrecolumna.add("id");

        for (Object columna : nombrecolumna) {
            modelo.addColumn(columna);
        }

        this.tabla_cajas_cerrada.setModel(modelo);

        while (res.next()) {

            String usuario = res.getString("usuario");
            String fecha_apertura = res.getString("fecha_abertura");
            String fecha_cierre = res.getString("fecha_cierre");

            String retiros = String.valueOf(res.getString("retiros"));
            String id = res.getString("id");
            float retiro = Float.valueOf(res.getString("retiros"));
            float plata_en_caja = Float.valueOf(res.getString("plata_en_caja_al_cierre"));

            float total_recaudado = (retiro + plata_en_caja);

            String tab[] = {usuario, fecha_apertura, fecha_cierre, retiros, String.valueOf(plata_en_caja), String.valueOf(total_recaudado), id};

            modelo.addRow(tab);
        }

        tabla_cajas_cerrada.setModel(modelo);

    }
    private void actualizar_totalesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_totalesMousePressed

        try {
            ingresoporcategoria_fecha(Main.DiaActual, Login.usuario);

        } catch (SQLException ex) {
            Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            tabla_caja_cerrada();
        } catch (SQLException ex) {
            Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_actualizar_totalesMousePressed

    private void importe_inicial_cajaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_importe_inicial_cajaKeyPressed
        char validador = evt.getKeyChar();

        if (Character.isLetter(validador)) {
            getToolkit().beep();
            evt.consume();
            Component rootPane = null;

            JOptionPane.showMessageDialog(rootPane, "Ingrese solo números!  ");
            importe_inicial_caja.setText(null);
        }
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            try {
                abrircaja();
            } catch (SQLException ex) {
                Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                tablacajaabierta();
            } catch (SQLException ex) {
                Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_importe_inicial_cajaKeyPressed

    private void generar_retiroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generar_retiroMousePressed
        try {
            generarretiro();
        } catch (SQLException ex) {
            Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            tablacajaabierta();

        } catch (SQLException ex) {
            Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_generar_retiroMousePressed

    private void importe_retiroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_importe_retiroKeyPressed
        char validador = evt.getKeyChar();
        if (Character.isLetter(validador)) {
            getToolkit().beep();
            evt.consume();
            Component rootPane = null;

            JOptionPane.showMessageDialog(rootPane, "Ingrese solo números!  ");
            importe_retiro.setText(null);
        }
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            try {
                generarretiro();
            } catch (SQLException ex) {
                Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                tablacajaabierta();
            } catch (SQLException ex) {
                Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_importe_retiroKeyPressed
    public void imprimircierre() throws SQLException {
        Component jFrame = null;
        String hora_apertura = "";
        String hora_cierre = "";
        int cont = 0;
        int cont1 = 0;
        int result = JOptionPane.showConfirmDialog(jFrame, "Desea imprimir cierre?");
        if (result == 0) {
            String fecha_ab = "";
            int fila = tabla_cajas_cerrada.getSelectedRow();
            String usuario = tabla_cajas_cerrada.getValueAt(fila, 0).toString();
            String fecha_hora_apertura = tabla_cajas_cerrada.getValueAt(fila, 1).toString();
            String fecha_hora_cierre = tabla_cajas_cerrada.getValueAt(fila, 2).toString();
            String retiros = tabla_cajas_cerrada.getValueAt(fila, 3).toString();
            String monto_caja = tabla_cajas_cerrada.getValueAt(fila, 4).toString();
            String total = tabla_cajas_cerrada.getValueAt(fila, 5).toString();
            String id = tabla_cajas_cerrada.getValueAt(fila, 6).toString();

            for (int i = 0; i < fecha_hora_apertura.length(); i++) {
                char a = fecha_hora_apertura.charAt(i);

                if (!String.valueOf(a).equals(" ")) {
                    fecha_ab += a;
                } else {
                    i = fecha_hora_apertura.length();
                }
            }

            for (int i = 0; i < fecha_hora_apertura.length(); i++) {
                char a = fecha_hora_apertura.charAt(i);
                if (cont > 0) {
                    hora_apertura += a;
                }

                if (String.valueOf(a).equals(" ") && cont == 0) {
                    cont++;
                }

            }

            for (int i = 0; i < fecha_hora_cierre.length(); i++) {
                char a = fecha_hora_cierre.charAt(i);
                if (cont1 > 0) {
                    hora_cierre += a;
                }

                if (String.valueOf(a).equals(" ") && cont1 == 0) {
                    cont1++;
                }

            }
            System.out.println(fecha_hora_cierre + "cierre");
            imprimir_tiket_caja(fecha_ab, fecha_hora_cierre, usuario, id, fecha_hora_apertura, retiros, monto_caja, total, hora_apertura, hora_cierre);
        }

    }
    private void jLabel7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MousePressed
        try {
            imprimircierre();
        } catch (SQLException ex) {
            Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel7MousePressed

    private void tabla_cajas_cerradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_cajas_cerradaKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            try {
                imprimircierre();
            } catch (SQLException ex) {
                Logger.getLogger(cajas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tabla_cajas_cerradaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton actualizar_totales;
    private javax.swing.JLabel cantidad_acampantes;
    private javax.swing.JLabel cantidad_dia;
    private javax.swing.JLabel cantidad_otros_acampantes;
    private javax.swing.JLabel cantidad_otros_dia;
    private javax.swing.JLabel casillas;
    public javax.swing.JButton cerrar_caja;
    public javax.swing.JButton generar_retiro;
    private javax.swing.JLabel gg;
    public javax.swing.JTextField importe_inicial_caja;
    public javax.swing.JTextField importe_retiro;
    private javax.swing.JLabel inv_acamp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane6;
    public javax.swing.JTable tabla_cajas;
    public javax.swing.JTable tabla_cajas_cerrada;
    public javax.swing.JTable tabla_retiros2;
    // End of variables declaration//GEN-END:variables

}
